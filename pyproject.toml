[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ducklake-tutorial"
version = "0.1.0"
description = "DuckLake tutorial with marimo and PostgreSQL catalog"
authors = [
    {name = "Tutorial Author", email = "author@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"

dependencies = [
    "marimo[sql]>=0.10.0",
    "duckdb>=1.3.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "psycopg2-binary>=2.9.0",
    "taskipy>=1.12.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "ipython>=8.37.0",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "ipython>=8.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.scripts]
ducklake-demo = "ducklake_demo:cli"

[project.urls]
Homepage = "https://github.com/yourusername/ducklake-tutorial"
Repository = "https://github.com/yourusername/ducklake-tutorial"
Documentation = "https://github.com/yourusername/ducklake-tutorial#readme"

[tool.taskipy.tasks]
# Core service management
start-postgres = "podman run -d --name ducklake-postgres --replace -e POSTGRES_DB=${POSTGRES_DB:-ducklake_catalog} -e POSTGRES_USER=${POSTGRES_USER:-ducklake} -e POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ducklake123} -p ${POSTGRES_PORT:-5432}:5432 postgres:15"
start-minio = "podman run -d --name ducklake-minio --replace -e MINIO_ROOT_USER=${MINIO_USER:-minioadmin} -e MINIO_ROOT_PASSWORD=${MINIO_PASSWORD:-minioadmin} -p ${MINIO_PORT:-9000}:9000 -p ${MINIO_CONSOLE_PORT:-9001}:9001 -v minio_data:/data quay.io/minio/minio:latest server /data --console-address :9001"
create-bucket = "podman exec ducklake-minio mc alias set local http://localhost:9000 minioadmin minioadmin && podman exec ducklake-minio mc mb local/ducklake-bucket 2>/dev/null || true"
start = "task start-postgres && task start-minio && sleep 2 && task create-bucket"

stop-postgres = "podman stop ducklake-postgres 2>/dev/null || true && podman rm ducklake-postgres 2>/dev/null || true"
stop-minio = "podman stop ducklake-minio 2>/dev/null || true && podman rm ducklake-minio 2>/dev/null || true"
stop = "task stop-postgres && task stop-minio"

# Status and monitoring
status = "podman ps --filter name=ducklake"
logs-postgres = "podman logs -f ducklake-postgres"
logs-minio = "podman logs -f ducklake-minio"
logs = "(podman logs -f ducklake-postgres 2>&1 | sed 's/^/[POSTGRES] /' &) && (podman logs -f ducklake-minio 2>&1 | sed 's/^/[MINIO] /' &) && wait"

# Development workflow
notebook = "marimo edit ducklake_tutorial.py --host 0.0.0.0 --port 8080 --no-token"
dev = "task start && echo 'Waiting for services...' && sleep 3 && task notebook"

# Data management
clean = "task stop && podman volume rm minio_data postgres_data 2>/dev/null || true && rm -rf ./ducklake_data"
reset = "task clean && task start"
reset-data = "rm -rf ./ducklake_data && podman exec ducklake-postgres psql -U ${POSTGRES_USER:-ducklake} -d ${POSTGRES_DB:-ducklake_catalog} -c 'DROP SCHEMA IF EXISTS ducklake CASCADE; DROP SCHEMA IF EXISTS main CASCADE; DROP SCHEMA IF EXISTS public CASCADE; CREATE SCHEMA public;' 2>/dev/null || true"

[tool.hatch.build.targets.wheel]
packages = ["."]
include = ["ducklake_demo.py", "init.sql", "docker-compose.yml"]

[tool.ruff.lint]
extend-ignore = ["E722", "F401", "F403", "F405"]

[tool.basedpyright]
reportUnusedCallResult = false
reportAny = false
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnusedParameter = false
reportUnusedVariable = false
reportUnusedImport = false

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[dependency-groups]
dev = [
    "basedpyright>=1.30.1",
    "pandas-stubs>=2.3.0.250703",
]
